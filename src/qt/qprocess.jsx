/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QProcess class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qiodevice.jsx";
import "qt/qobject.jsx";
import "qt/qprocessenvironment.jsx";
import "qt/_signals.jsx";

final native class Qt_QProcess_ProcessChannel {}

final native class Qt_QProcess_ProcessChannelMode {}

final native class Qt_QProcess_ProcessState {}

final native class Qt_QProcess_ProcessError {}

final native class Qt_QProcess_ExitStatus {}

native class QProcess extends QIODevice
{
    function constructor (parent : QObject);

    // Static Members
    static function execute (program : string) : int;
    static function nullDevice () : string;
    static function startDetached (program : string) : boolean;
    static function systemEnvironment () : string[];

    static const StandardOutput : Qt_QProcess_ProcessChannel;
    static const StandardError : Qt_QProcess_ProcessChannel;
    static function ProcessChannel(value : Qt_QProcess_ProcessChannel) : Qt_QProcess_ProcessChannel;

    static const SeparateChannels : Qt_QProcess_ProcessChannelMode;
    static const MergedChannels : Qt_QProcess_ProcessChannelMode;
    static const ForwardedChannels : Qt_QProcess_ProcessChannelMode;
    static const ForwardedOutputChannel : Qt_QProcess_ProcessChannelMode;
    static const ForwardedErrorChannel : Qt_QProcess_ProcessChannelMode;
    static function ProcessChannelMode(value : Qt_QProcess_ProcessChannelMode) : Qt_QProcess_ProcessChannelMode;

    static const NotRunning : Qt_QProcess_ProcessState;
    static const Starting : Qt_QProcess_ProcessState;
    static const Running : Qt_QProcess_ProcessState;
    static function ProcessState(value : Qt_QProcess_ProcessState) : Qt_QProcess_ProcessState;

    static const FailedToStart : Qt_QProcess_ProcessError;
    static const Crashed : Qt_QProcess_ProcessError;
    static const Timedout : Qt_QProcess_ProcessError;
    static const ReadError : Qt_QProcess_ProcessError;
    static const WriteError : Qt_QProcess_ProcessError;
    static const UnknownError : Qt_QProcess_ProcessError;
    static function ProcessError(value : Qt_QProcess_ProcessError) : Qt_QProcess_ProcessError;

    static const NormalExit : Qt_QProcess_ExitStatus;
    static const CrashExit : Qt_QProcess_ExitStatus;
    static function ExitStatus(value : Qt_QProcess_ExitStatus) : Qt_QProcess_ExitStatus;

    // Methods
    function arguments () : string[];
    function closeReadChannel (channel : Qt_QProcess_ProcessChannel) : void;
    function closeWriteChannel () : void;
    function environment () : string[];
    function exitCode () : int;
    function exitStatus () : Qt_QProcess_ExitStatus;
    function processChannelMode () : Qt_QProcess_ProcessChannelMode;
    function processEnvironment () : QProcessEnvironment;
    function program () : string;
    function readAllStandardError () : QByteArray;
    function readAllStandardOutput () : QByteArray;
    function readChannel () : Qt_QProcess_ProcessChannel;
    function setArguments (arguments : string[]) : void;
    function setEnvironment (environment : string[]) : void;
    function setProcessChannelMode (mode : Qt_QProcess_ProcessChannelMode) : void;
    function setProcessEnvironment (environment : QProcessEnvironment) : void;
    function setProcessState (state : Qt_QProcess_ProcessState) : void;
    function setProgram (program : string) : void;
    function setReadChannel (channel : Qt_QProcess_ProcessChannel) : void;
    function setStandardErrorFile (fileName : string, mode : Qt_QIODevice_OpenMode) : void;
    function setStandardInputFile (fileName : string) : void;
    function setStandardOutputFile (fileName : string, mode : Qt_QIODevice_OpenMode) : void;
    function setStandardOutputProcess (destination : QProcess) : void;
    function setWorkingDirectory (dir : string) : void;
    function setupChildProcess () : void;
    function start (mode : Qt_QIODevice_OpenMode) : void;
    function start (command : string, mode : Qt_QIODevice_OpenMode) : void;
    function start (program : string, arguments : string[], mode : Qt_QIODevice_OpenMode) : void;
    function state () : Qt_QProcess_ProcessState;
    function waitForFinished (msecs : int) : boolean;
    function waitForStarted (msecs : int) : boolean;
    function workingDirectory () : string;

    // Slots
    function kill () : void;
    function terminate () : void;

    // Signals
    var error : QtJSXQt_QProcess_ProcessErrorSignal;
    var finished : QtJSXintQt_QProcess_ExitStatusSignal;
}
