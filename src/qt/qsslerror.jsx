/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QSslError class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qsslcertificate.jsx";

final native class Qt_QSslError_SslError {}

native class QSslError
{
    function constructor ();
    function constructor (error : Qt_QSslError_SslError);
    function constructor (error : Qt_QSslError_SslError, certificate : QSslCertificate);
    function constructor (other : QSslError);

    static const UnspecifiedError : Qt_QSslError_SslError;
    static const NoError : Qt_QSslError_SslError;
    static const UnableToGetIssuerCertificate : Qt_QSslError_SslError;
    static const UnableToDecryptCertificateSignature : Qt_QSslError_SslError;
    static const UnableToDecodeIssuerPublicKey : Qt_QSslError_SslError;
    static const CertificateSignatureFailed : Qt_QSslError_SslError;
    static const CertificateNotYetValid : Qt_QSslError_SslError;
    static const CertificateExpired : Qt_QSslError_SslError;
    static const InvalidNotBeforeField : Qt_QSslError_SslError;
    static const InvalidNotAfterField : Qt_QSslError_SslError;
    static const SelfSignedCertificate : Qt_QSslError_SslError;
    static const SelfSignedCertificateInChain : Qt_QSslError_SslError;
    static const UnableToGetLocalIssuerCertificate : Qt_QSslError_SslError;
    static const UnableToVerifyFirstCertificate : Qt_QSslError_SslError;
    static const CertificateRevoked : Qt_QSslError_SslError;
    static const InvalidCaCertificate : Qt_QSslError_SslError;
    static const PathLengthExceeded : Qt_QSslError_SslError;
    static const InvalidPurpose : Qt_QSslError_SslError;
    static const CertificateUntrusted : Qt_QSslError_SslError;
    static const CertificateRejected : Qt_QSslError_SslError;
    static const SubjectIssuerMismatch : Qt_QSslError_SslError;
    static const AuthorityIssuerSerialNumberMismatch : Qt_QSslError_SslError;
    static const NoPeerCertificate : Qt_QSslError_SslError;
    static const HostNameMismatch : Qt_QSslError_SslError;
    static const NoSslSupport : Qt_QSslError_SslError;
    static const CertificateBlacklisted : Qt_QSslError_SslError;
    static function SslError(value : Qt_QSslError_SslError) : Qt_QSslError_SslError;

    // Methods
    function certificate () : QSslCertificate;
    function error () : Qt_QSslError_SslError;
    function errorString () : string;
    function operator_assign (other : QSslError) : QSslError;
    function operator_equal (other : QSslError) : boolean;
    function swap (other : QSslError) : void;
}
