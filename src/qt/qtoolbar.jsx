/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QToolBar class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qaction.jsx";
import "qt/qicon.jsx";
import "qt/qpoint.jsx";
import "qt/qrect.jsx";
import "qt/qsize.jsx";
import "qt/qstyleoptiontoolbar.jsx";
import "qt/qt.jsx";
import "qt/qwidget.jsx";
import "qt/_signals.jsx";

native class QToolBar extends QWidget
{
    function constructor (parent : QWidget);
    function constructor (title : string, parent : QWidget);

    // Methods
    function actionAt (p : QPoint) : QAction;
    function actionAt (x : int, y : int) : QAction;
    function actionGeometry (action : QAction) : QRect;
    function addAction (icon : QIcon, text : string) : QAction;
    function addAction (text : string) : QAction;
    function addSeparator () : QAction;
    function addWidget (widget : QWidget) : QAction;
    function allowedAreas () : Qt_ToolBarAreas;
    function clear () : void;
    function iconSize () : QSize;
    function initStyleOption (option : QStyleOptionToolBar) : void;
    function insertSeparator (before : QAction) : QAction;
    function insertWidget (before : QAction, widget : QWidget) : QAction;
    function isAreaAllowed (area : Qt_ToolBarArea) : boolean;
    function isFloatable () : boolean;
    function isFloating () : boolean;
    function orientation () : Qt_Orientation;
    function setAllowedAreas (areas : Qt_ToolBarAreas) : void;
    function setFloatable (floatable : boolean) : void;
    function setMovable (movable : boolean) : void;
    function setOrientation (orientation : Qt_Orientation) : void;
    function toggleViewAction () : QAction;
    function toolButtonStyle () : Qt_ToolButtonStyle;
    function widgetForAction (action : QAction) : QWidget;

    // Slots
    function setIconSize (iconSize : QSize) : void;
    function setToolButtonStyle (toolButtonStyle : Qt_ToolButtonStyle) : void;

    // Signals
    var actionTriggered : QtJSXQActionSignal;
    var allowedAreasChanged : QtJSXQt_ToolBarAreasSignal;
    var iconSizeChanged : QtJSXQSizeSignal;
    var movableChanged : QtJSXboolSignal;
    var orientationChanged : QtJSXQt_OrientationSignal;
    var toolButtonStyleChanged : QtJSXQt_ToolButtonStyleSignal;
    var topLevelChanged : QtJSXboolSignal;
    var visibilityChanged : QtJSXboolSignal;

    // Instance Properties
    var movable : boolean;
}
