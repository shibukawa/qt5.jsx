/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QTextStream class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qiodevice.jsx";
import "qt/qlocale.jsx";
import "qt/qtextcodec.jsx";

final native class Qt_QTextStream_FieldAlignment {}

final native class Qt_QTextStream_Status {}

final native class Qt_QTextStream_NumberFlag {}

final native class Qt_QTextStream_NumberFlags {}

final native class Qt_QTextStream_RealNumberNotation {}

native class QTextStream
{
    function constructor ();
    function constructor (device : QIODevice);
    function constructor (array : QByteArray, openMode : Qt_QIODevice_OpenMode);

    static const AlignLeft : Qt_QTextStream_FieldAlignment;
    static const AlignRight : Qt_QTextStream_FieldAlignment;
    static const AlignCenter : Qt_QTextStream_FieldAlignment;
    static const AlignAccountingStyle : Qt_QTextStream_FieldAlignment;
    static function FieldAlignment(value : Qt_QTextStream_FieldAlignment) : Qt_QTextStream_FieldAlignment;

    static const Ok : Qt_QTextStream_Status;
    static const ReadPastEnd : Qt_QTextStream_Status;
    static const ReadCorruptData : Qt_QTextStream_Status;
    static const WriteFailed : Qt_QTextStream_Status;
    static function Status(value : Qt_QTextStream_Status) : Qt_QTextStream_Status;

    static const ShowBase : Qt_QTextStream_NumberFlag;
    static const ForcePoint : Qt_QTextStream_NumberFlag;
    static const ForceSign : Qt_QTextStream_NumberFlag;
    static const UppercaseBase : Qt_QTextStream_NumberFlag;
    static const UppercaseDigits : Qt_QTextStream_NumberFlag;
    static function NumberFlag(value : Qt_QTextStream_NumberFlag) : Qt_QTextStream_NumberFlag;
    static function NumberFlags(...value : Qt_QTextStream_NumberFlag) : Qt_QTextStream_NumberFlags;

    static const SmartNotation : Qt_QTextStream_RealNumberNotation;
    static const FixedNotation : Qt_QTextStream_RealNumberNotation;
    static const ScientificNotation : Qt_QTextStream_RealNumberNotation;
    static function RealNumberNotation(value : Qt_QTextStream_RealNumberNotation) : Qt_QTextStream_RealNumberNotation;

    // Methods
    function atEnd () : boolean;
    function autoDetectUnicode () : boolean;
    function codec () : QTextCodec;
    function device () : QIODevice;
    function fieldAlignment () : Qt_QTextStream_FieldAlignment;
    function fieldWidth () : int;
    function flush () : void;
    function generateByteOrderMark () : boolean;
    function integerBase () : int;
    function locale () : QLocale;
    function numberFlags () : Qt_QTextStream_NumberFlags;
    function padChar () : string;
    function pos () : number;
    function read (maxlen : number) : string;
    function readAll () : string;
    function readByte () : QTextStream;
    function readDouble () : QTextStream;
    function readFloat () : QTextStream;
    function readInt () : QTextStream;
    function readLine (maxlen : number) : string;
    function readLongLong () : QTextStream;
    function readShort () : QTextStream;
    function readUInt () : QTextStream;
    function readUShort () : QTextStream;
    function realNumberNotation () : Qt_QTextStream_RealNumberNotation;
    function realNumberPrecision () : int;
    function reset () : void;
    function resetStatus () : void;
    function seek (pos : number) : boolean;
    function setAutoDetectUnicode (enabled : boolean) : void;
    function setCodec (codec : QTextCodec) : void;
    function setCodec (codecName : string) : void;
    function setDevice (device : QIODevice) : void;
    function setFieldAlignment (alignment : Qt_QTextStream_FieldAlignment) : void;
    function setFieldWidth (width : int) : void;
    function setGenerateByteOrderMark (generate : boolean) : void;
    function setIntegerBase (base : int) : void;
    function setLocale (locale : QLocale) : void;
    function setNumberFlags (flags : Qt_QTextStream_NumberFlags) : void;
    function setPadChar (ch : string) : void;
    function setRealNumberNotation (notation : Qt_QTextStream_RealNumberNotation) : void;
    function setRealNumberPrecision (precision : int) : void;
    function setStatus (status : Qt_QTextStream_Status) : void;
    function skipWhiteSpace () : void;
    function status () : Qt_QTextStream_Status;
    function writeByte (ch : string) : QTextStream;
    function writeByteArray (array : QByteArray) : QTextStream;
    function writeDouble (f : number) : QTextStream;
    function writeFloat (f : number) : QTextStream;
    function writeInt (i : int) : QTextStream;
    function writeShort (i : int) : QTextStream;
    function writeString (s : string) : QTextStream;
}
