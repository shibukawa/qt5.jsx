/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QXmlStreamReader class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qiodevice.jsx";
import "qt/qxmlstreamattributes.jsx";
import "qt/qxmlstreamentitydeclaration.jsx";
import "qt/qxmlstreamentityresolver.jsx";
import "qt/qxmlstreamnamespacedeclaration.jsx";
import "qt/qxmlstreamnotationdeclaration.jsx";

final native class Qt_QXmlStreamReader_TokenType {}

final native class Qt_QXmlStreamReader_Error {}

final native class Qt_QXmlStreamReader_ReadElementTextBehaviour {}

native class QXmlStreamReader
{
    function constructor ();
    function constructor (device : QIODevice);
    function constructor (data : QByteArray);
    function constructor (data : string);

    static const NoToken : Qt_QXmlStreamReader_TokenType;
    static const Invalid : Qt_QXmlStreamReader_TokenType;
    static const StartDocument : Qt_QXmlStreamReader_TokenType;
    static const EndDocument : Qt_QXmlStreamReader_TokenType;
    static const StartElement : Qt_QXmlStreamReader_TokenType;
    static const EndElement : Qt_QXmlStreamReader_TokenType;
    static const Characters : Qt_QXmlStreamReader_TokenType;
    static const Comment : Qt_QXmlStreamReader_TokenType;
    static const DTD : Qt_QXmlStreamReader_TokenType;
    static const EntityReference : Qt_QXmlStreamReader_TokenType;
    static const ProcessingInstruction : Qt_QXmlStreamReader_TokenType;
    static function TokenType(value : Qt_QXmlStreamReader_TokenType) : Qt_QXmlStreamReader_TokenType;

    static const NoError : Qt_QXmlStreamReader_Error;
    static const UnexpectedElementError : Qt_QXmlStreamReader_Error;
    static const CustomError : Qt_QXmlStreamReader_Error;
    static const NotWellFormedError : Qt_QXmlStreamReader_Error;
    static const PrematureEndOfDocumentError : Qt_QXmlStreamReader_Error;
    static function Error(value : Qt_QXmlStreamReader_Error) : Qt_QXmlStreamReader_Error;

    static const ErrorOnUnexpectedElement : Qt_QXmlStreamReader_ReadElementTextBehaviour;
    static const IncludeChildElements : Qt_QXmlStreamReader_ReadElementTextBehaviour;
    static const SkipChildElements : Qt_QXmlStreamReader_ReadElementTextBehaviour;
    static function ReadElementTextBehaviour(value : Qt_QXmlStreamReader_ReadElementTextBehaviour) : Qt_QXmlStreamReader_ReadElementTextBehaviour;

    // Methods
    function addData (data : QByteArray) : void;
    function addData (data : string) : void;
    function addExtraNamespaceDeclaration (extraNamespaceDeclaraction : QXmlStreamNamespaceDeclaration) : void;
    function addExtraNamespaceDeclarations (extraNamespaceDeclaractions : QXmlStreamNamespaceDeclaration[]) : void;
    function atEnd () : boolean;
    function attributes () : QXmlStreamAttributes;
    function characterOffset () : number;
    function clear () : void;
    function columnNumber () : number;
    function device () : QIODevice;
    function documentEncoding () : string;
    function documentVersion () : string;
    function dtdName () : string;
    function dtdPublicId () : string;
    function dtdSystemId () : string;
    function entityDeclarations () : QXmlStreamEntityDeclaration[];
    function entityResolver () : QXmlStreamEntityResolver;
    function error () : Qt_QXmlStreamReader_Error;
    function errorString () : string;
    function hasError () : boolean;
    function isCDATA () : boolean;
    function isCharacters () : boolean;
    function isComment () : boolean;
    function isDTD () : boolean;
    function isEndDocument () : boolean;
    function isEndElement () : boolean;
    function isEntityReference () : boolean;
    function isProcessingInstruction () : boolean;
    function isStandaloneDocument () : boolean;
    function isStartDocument () : boolean;
    function isStartElement () : boolean;
    function isWhitespace () : boolean;
    function lineNumber () : number;
    function name () : string;
    function namespaceDeclarations () : QXmlStreamNamespaceDeclaration[];
    function namespaceProcessing () : boolean;
    function namespaceUri () : string;
    function notationDeclarations () : QXmlStreamNotationDeclaration[];
    function prefix () : string;
    function processingInstructionData () : string;
    function processingInstructionTarget () : string;
    function qualifiedName () : string;
    function raiseError (message : string) : void;
    function readElementText (behaviour : Qt_QXmlStreamReader_ReadElementTextBehaviour) : string;
    function readNext () : Qt_QXmlStreamReader_TokenType;
    function readNextStartElement () : boolean;
    function setDevice (device : QIODevice) : void;
    function setEntityResolver (resolver : QXmlStreamEntityResolver) : void;
    function setNamespaceProcessing (arg__1 : boolean) : void;
    function skipCurrentElement () : void;
    function text () : string;
    function tokenString () : string;
    function tokenType () : Qt_QXmlStreamReader_TokenType;
}
