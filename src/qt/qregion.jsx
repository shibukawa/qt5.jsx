/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QRegion class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbitmap.jsx";
import "qt/qpoint.jsx";
import "qt/qpolygon.jsx";
import "qt/qrect.jsx";
import "qt/qt.jsx";

final native class Qt_QRegion_RegionType {}

native class QRegion
{
    function constructor ();
    function constructor (bitmap : QBitmap);
    function constructor (pa : QPolygon, fillRule : Qt_FillRule);
    function constructor (r : QRect, t : Qt_QRegion_RegionType);
    function constructor (region : QRegion);
    function constructor (x : int, y : int, w : int, h : int, t : Qt_QRegion_RegionType);

    static const Rectangle : Qt_QRegion_RegionType;
    static const Ellipse : Qt_QRegion_RegionType;
    static function RegionType(value : Qt_QRegion_RegionType) : Qt_QRegion_RegionType;

    // Methods
    function boundingRect () : QRect;
    function contains (p : QPoint) : boolean;
    function contains (r : QRect) : boolean;
    function intersected (r : QRect) : QRegion;
    function intersected (r : QRegion) : QRegion;
    function intersects (r : QRect) : boolean;
    function intersects (r : QRegion) : boolean;
    function isEmpty () : boolean;
    function isNull () : boolean;
    function operator_add (r : QRect) : QRegion;
    function operator_and (r : QRect) : QRegion;
    function operator_equal (r : QRegion) : boolean;
    function rectCount () : int;
    function rects () : QRect[];
    function setRects (rect : QRect, num : int) : void;
    function subtracted (r : QRegion) : QRegion;
    function swap (other : QRegion) : void;
    function translate (p : QPoint) : void;
    function translate (dx : int, dy : int) : void;
    function translated (p : QPoint) : QRegion;
    function translated (dx : int, dy : int) : QRegion;
    function united (r : QRect) : QRegion;
    function united (r : QRegion) : QRegion;
    function xored (r : QRegion) : QRegion;
}
