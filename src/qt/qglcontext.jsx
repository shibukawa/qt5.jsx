/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QGLContext class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qcolor.jsx";
import "qt/qpaintdevice.jsx";

final native class Qt_QGLContext_BindOption {}

final native class Qt_QGLContext_BindOptions {}

native class QGLContext
{

    // Static Members
    static function areSharing (context1 : QGLContext, context2 : QGLContext) : boolean;
    static function currentContext () : QGLContext;
    static function setTextureCacheLimit (size : int) : void;
    static function textureCacheLimit () : int;

    static const NoBindOption : Qt_QGLContext_BindOption;
    static const InvertedYBindOption : Qt_QGLContext_BindOption;
    static const MipmapBindOption : Qt_QGLContext_BindOption;
    static const PremultipliedAlphaBindOption : Qt_QGLContext_BindOption;
    static const LinearFilteringBindOption : Qt_QGLContext_BindOption;
    static const DefaultBindOption : Qt_QGLContext_BindOption;
    static const MemoryManagedBindOption : Qt_QGLContext_BindOption;
    static const InternalBindOption : Qt_QGLContext_BindOption;
    static const CanFlipNativePixmapBindOption : Qt_QGLContext_BindOption;
    static const TemporarilyCachedBindOption : Qt_QGLContext_BindOption;
    static function BindOption(value : Qt_QGLContext_BindOption) : Qt_QGLContext_BindOption;
    static function BindOptions(...value : Qt_QGLContext_BindOption) : Qt_QGLContext_BindOptions;

    // Methods
    function chooseContext (shareContext : QGLContext) : boolean;
    function colorIndex (c : QColor) : int;
    function create (shareContext : QGLContext) : boolean;
    function device () : QPaintDevice;
    function deviceIsPixmap () : boolean;
    function doneCurrent () : void;
    function initialized () : boolean;
    function isSharing () : boolean;
    function isValid () : boolean;
    function makeCurrent () : void;
    function overlayTransparentColor () : QColor;
    function reset () : void;
    function setInitialized (on : boolean) : void;
    function setValid (valid : boolean) : void;
    function setWindowCreated (on : boolean) : void;
    function swapBuffers () : void;
    function windowCreated () : boolean;
}
