/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QSslConfiguration class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qssl.jsx";
import "qt/qsslcertificate.jsx";
import "qt/qsslcipher.jsx";
import "qt/qsslkey.jsx";
import "qt/qsslsocket.jsx";

native class QSslConfiguration
{
    function constructor ();
    function constructor (other : QSslConfiguration);

    // Static Members
    static function defaultConfiguration () : QSslConfiguration;
    static function setDefaultConfiguration (configuration : QSslConfiguration) : void;

    // Methods
    function caCertificates () : QSslCertificate[];
    function ciphers () : QSslCipher[];
    function isNull () : boolean;
    function localCertificate () : QSslCertificate;
    function localCertificateChain () : QSslCertificate[];
    function operator_assign (other : QSslConfiguration) : QSslConfiguration;
    function operator_equal (other : QSslConfiguration) : boolean;
    function peerCertificate () : QSslCertificate;
    function peerCertificateChain () : QSslCertificate[];
    function peerVerifyDepth () : int;
    function peerVerifyMode () : Qt_QSslSocket_PeerVerifyMode;
    function privateKey () : QSslKey;
    function protocol () : Qt_QSsl_SslProtocol;
    function sessionCipher () : QSslCipher;
    function sessionTicket () : QByteArray;
    function sessionTicketLifeTimeHint () : int;
    function setCaCertificates (certificates : QSslCertificate[]) : void;
    function setCiphers (ciphers : QSslCipher[]) : void;
    function setLocalCertificate (certificate : QSslCertificate) : void;
    function setLocalCertificateChain (localChain : QSslCertificate[]) : void;
    function setPeerVerifyDepth (depth : int) : void;
    function setPeerVerifyMode (mode : Qt_QSslSocket_PeerVerifyMode) : void;
    function setPrivateKey (key : QSslKey) : void;
    function setProtocol (protocol : Qt_QSsl_SslProtocol) : void;
    function setSessionTicket (sessionTicket : QByteArray) : void;
    function swap (other : QSslConfiguration) : void;
}
