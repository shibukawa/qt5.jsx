/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QSplitter class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qframe.jsx";
import "qt/qsplitterhandle.jsx";
import "qt/qt.jsx";
import "qt/qtextstream.jsx";
import "qt/qwidget.jsx";
import "qt/_signals.jsx";

native class QSplitter extends QFrame
{
    function constructor (parent : QWidget);
    function constructor (arg__1 : Qt_Orientation, parent : QWidget);

    // Methods
    function addWidget (widget : QWidget) : void;
    function closestLegalPosition (arg__1 : int, arg__2 : int) : int;
    function count () : int;
    function createHandle () : QSplitterHandle;
    function getRange (index : int, arg__2 : int, arg__3 : int) : void;
    function handle (index : int) : QSplitterHandle;
    function indexOf (w : QWidget) : int;
    function insertWidget (index : int, widget : QWidget) : void;
    function isCollapsible (index : int) : boolean;
    function moveSplitter (pos : int, index : int) : void;
    function readFrom (arg__1 : QTextStream) : void;
    function refresh () : void;
    function restoreState (state : QByteArray) : boolean;
    function saveState () : QByteArray;
    function setCollapsible (index : int, arg__2 : boolean) : void;
    function setRubberBand (position : int) : void;
    function setSizes (list : int[]) : void;
    function setStretchFactor (index : int, stretch : int) : void;
    function sizes () : int[];
    function widget (index : int) : QWidget;
    function writeTo (arg__1 : QTextStream) : void;

    // Signals
    var splitterMoved : QtJSXintintSignal;

    // Instance Properties
    var orientation : Qt_Orientation;
    var opaqueResize : boolean;
    var handleWidth : int;
    var childrenCollapsible : boolean;
}
