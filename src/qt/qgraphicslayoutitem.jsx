/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QGraphicsLayoutItem class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qgraphicsitem.jsx";
import "qt/qrectf.jsx";
import "qt/qsizef.jsx";
import "qt/qsizepolicy.jsx";
import "qt/qt.jsx";

native class QGraphicsLayoutItem
{
    function constructor (parent : QGraphicsLayoutItem, isLayout : boolean);

    // Methods
    function contentsRect () : QRectF;
    function effectiveSizeHint (which : Qt_SizeHint, constraint : QSizeF) : QSizeF;
    function geometry () : QRectF;
    function getContentsMargins (left : number, top : number, right : number, bottom : number) : void;
    function graphicsItem () : QGraphicsItem;
    function isLayout () : boolean;
    function maximumHeight () : number;
    function maximumSize () : QSizeF;
    function maximumWidth () : number;
    function minimumHeight () : number;
    function minimumSize () : QSizeF;
    function minimumWidth () : number;
    function ownedByLayout () : boolean;
    function parentLayoutItem () : QGraphicsLayoutItem;
    function preferredHeight () : number;
    function preferredSize () : QSizeF;
    function preferredWidth () : number;
    function setGeometry (rect : QRectF) : void;
    function setGraphicsItem (item : QGraphicsItem) : void;
    function setMaximumHeight (height : number) : void;
    function setMaximumSize (size : QSizeF) : void;
    function setMaximumSize (w : number, h : number) : void;
    function setMaximumWidth (width : number) : void;
    function setMinimumHeight (height : number) : void;
    function setMinimumSize (size : QSizeF) : void;
    function setMinimumSize (w : number, h : number) : void;
    function setMinimumWidth (width : number) : void;
    function setOwnedByLayout (ownedByLayout : boolean) : void;
    function setParentLayoutItem (parent : QGraphicsLayoutItem) : void;
    function setPreferredHeight (height : number) : void;
    function setPreferredSize (size : QSizeF) : void;
    function setPreferredSize (w : number, h : number) : void;
    function setPreferredWidth (width : number) : void;
    function setSizePolicy (hPolicy : Qt_QSizePolicy_Policy, vPolicy : Qt_QSizePolicy_Policy, controlType : Qt_QSizePolicy_ControlType) : void;
    function setSizePolicy (policy : QSizePolicy) : void;
    function sizePolicy () : QSizePolicy;
    function updateGeometry () : void;
}
