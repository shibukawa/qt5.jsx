/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QTextCodec class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qtextdecoder.jsx";
import "qt/qtextencoder.jsx";

final native class Qt_QTextCodec_ConversionFlag {}

final native class Qt_QTextCodec_ConversionFlags {}

native class QTextCodec
{

    // Static Members
    static function availableCodecs () : QByteArray[];
    static function availableMibs () : int[];
    static function codecForHtml (ba : QByteArray) : QTextCodec;
    static function codecForLocale () : QTextCodec;
    static function codecForMib (mib : int) : QTextCodec;
    static function codecForName (name : QByteArray) : QTextCodec;
    static function codecForUtfText (ba : QByteArray) : QTextCodec;
    static function setCodecForLocale (c : QTextCodec) : void;

    static const ConvertInvalidToNull : Qt_QTextCodec_ConversionFlag;
    static const DefaultConversion : Qt_QTextCodec_ConversionFlag;
    static const IgnoreHeader : Qt_QTextCodec_ConversionFlag;
    static const FreeFunction : Qt_QTextCodec_ConversionFlag;
    static function ConversionFlag(value : Qt_QTextCodec_ConversionFlag) : Qt_QTextCodec_ConversionFlag;
    static function ConversionFlags(...value : Qt_QTextCodec_ConversionFlag) : Qt_QTextCodec_ConversionFlags;

    // Methods
    function aliases () : QByteArray[];
    function canEncode (arg__1 : string) : boolean;
    function fromUnicode (uc : string) : QByteArray;
    function makeDecoder (flags : Qt_QTextCodec_ConversionFlags) : QTextDecoder;
    function makeEncoder (flags : Qt_QTextCodec_ConversionFlags) : QTextEncoder;
    function mibEnum () : int;
    function name () : QByteArray;
    function toUnicode (arg__1 : QByteArray) : string;
}
