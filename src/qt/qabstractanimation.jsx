/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QAbstractAnimation class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qanimationgroup.jsx";
import "qt/qobject.jsx";
import "qt/_signals.jsx";

final native class Qt_QAbstractAnimation_Direction {}

final native class Qt_QAbstractAnimation_State {}

final native class Qt_QAbstractAnimation_DeletionPolicy {}

native class QAbstractAnimation extends QObject
{
    function constructor (parent : QObject);

    static const Forward : Qt_QAbstractAnimation_Direction;
    static const Backward : Qt_QAbstractAnimation_Direction;
    static function Direction(value : Qt_QAbstractAnimation_Direction) : Qt_QAbstractAnimation_Direction;

    static const Stopped : Qt_QAbstractAnimation_State;
    static const Paused : Qt_QAbstractAnimation_State;
    static const Running : Qt_QAbstractAnimation_State;
    static function State(value : Qt_QAbstractAnimation_State) : Qt_QAbstractAnimation_State;

    static const KeepWhenStopped : Qt_QAbstractAnimation_DeletionPolicy;
    static const DeleteWhenStopped : Qt_QAbstractAnimation_DeletionPolicy;
    static function DeletionPolicy(value : Qt_QAbstractAnimation_DeletionPolicy) : Qt_QAbstractAnimation_DeletionPolicy;

    // Methods
    function currentLoopTime () : int;
    function group () : QAnimationGroup;
    function totalDuration () : int;
    function updateCurrentTime (currentTime : int) : void;
    function updateDirection (direction : Qt_QAbstractAnimation_Direction) : void;
    function updateState (newState : Qt_QAbstractAnimation_State, oldState : Qt_QAbstractAnimation_State) : void;

    // Slots
    function pause () : void;
    function resume () : void;
    function setPaused (arg__1 : boolean) : void;
    function start (policy : Qt_QAbstractAnimation_DeletionPolicy) : void;
    function stop () : void;

    // Signals
    var currentLoopChanged : QtJSXintSignal;
    var directionChanged : QtJSXQt_QAbstractAnimation_DirectionSignal;
    var finished : QtJSXSignal;
    var stateChanged : QtJSXQt_QAbstractAnimation_StateQt_QAbstractAnimation_StateSignal;

    // Instance Properties
    var state : Qt_QAbstractAnimation_State;
    var loopCount : int;
    var currentTime : int;
    var currentLoop : int;
    var direction : Qt_QAbstractAnimation_Direction;
    var duration : int;
}
