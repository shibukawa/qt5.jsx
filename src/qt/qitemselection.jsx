/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QItemSelection class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qitemselectionmodel.jsx";
import "qt/qitemselectionrange.jsx";
import "qt/qmodelindex.jsx";

native class QItemSelection
{
    function constructor ();
    function constructor (topLeft : QModelIndex, bottomRight : QModelIndex);

    // Static Members
    static function fromVector (vector : QItemSelectionRange[]) : QItemSelectionRange[];
    static function split (range : QItemSelectionRange, other : QItemSelectionRange, result : QItemSelection) : void;

    // Methods
    function append (t : QItemSelectionRange) : void;
    function append (t : QItemSelectionRange[]) : void;
    function at (i : int) : QItemSelectionRange;
    function back () : QItemSelectionRange;
    function clear () : void;
    function contains (index : QModelIndex) : boolean;
    function count () : int;
    function count (t : QItemSelectionRange) : int;
    function detachShared () : void;
    function empty () : boolean;
    function endsWith (t : QItemSelectionRange) : boolean;
    function first () : QItemSelectionRange;
    function front () : QItemSelectionRange;
    function indexOf (t : QItemSelectionRange, from : int) : int;
    function indexes () : QModelIndex[];
    function isEmpty () : boolean;
    function isSharedWith (other : QItemSelectionRange[]) : boolean;
    function last () : QItemSelectionRange;
    function lastIndexOf (t : QItemSelectionRange, from : int) : int;
    function length () : int;
    function merge (other : QItemSelection, command : Qt_QItemSelectionModel_SelectionFlags) : void;
    function mid (pos : int, length : int) : QItemSelectionRange[];
    function move (from : int, to : int) : void;
    function operator_equal (l : QItemSelectionRange[]) : boolean;
    function pop_back () : void;
    function pop_front () : void;
    function prepend (t : QItemSelectionRange) : void;
    function push_back (t : QItemSelectionRange) : void;
    function push_front (t : QItemSelectionRange) : void;
    function removeAll (t : QItemSelectionRange) : int;
    function removeAt (i : int) : void;
    function removeFirst () : void;
    function removeLast () : void;
    function removeOne (t : QItemSelectionRange) : boolean;
    function replace (i : int, t : QItemSelectionRange) : void;
    function reserve (size : int) : void;
    function select (topLeft : QModelIndex, bottomRight : QModelIndex) : void;
    function setSharable (sharable : boolean) : void;
    function size () : int;
    function startsWith (t : QItemSelectionRange) : boolean;
    function swap (other : QItemSelectionRange[]) : void;
    function swap (i : int, j : int) : void;
    function takeAt (i : int) : QItemSelectionRange;
    function takeFirst () : QItemSelectionRange;
    function takeLast () : QItemSelectionRange;
    function toVector () : QItemSelectionRange[];
    function value (i : int) : QItemSelectionRange;
    function value (i : int, defaultValue : QItemSelectionRange) : QItemSelectionRange;
}
