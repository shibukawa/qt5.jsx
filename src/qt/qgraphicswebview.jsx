/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QGraphicsWebView class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qaction.jsx";
import "qt/qbytearray.jsx";
import "qt/qgraphicsitem.jsx";
import "qt/qgraphicswidget.jsx";
import "qt/qicon.jsx";
import "qt/qnetworkaccessmanager.jsx";
import "qt/qnetworkrequest.jsx";
import "qt/qpainter.jsx";
import "qt/qurl.jsx";
import "qt/qwebpage.jsx";
import "qt/qwebsettings.jsx";
import "qt/_signals.jsx";

native class QGraphicsWebView extends QGraphicsWidget
{
    function constructor (parent : QGraphicsItem);

    // Methods
    function findText (subString : string, options : Qt_QWebPage_FindFlags) : boolean;
    function load (request : QNetworkRequest, operation : Qt_QNetworkAccessManager_Operation, body : QByteArray) : void;
    function load (url : QUrl) : void;
    function page () : QWebPage;
    function pageAction (action : Qt_QWebPage_WebAction) : QAction;
    function setContent (data : QByteArray, mimeType : string, baseUrl : QUrl) : void;
    function setHtml (html : string, baseUrl : QUrl) : void;
    function setPage (arg__1 : QWebPage) : void;
    function setRenderHint (arg__1 : Qt_QPainter_RenderHint, enabled : boolean) : void;
    function settings () : QWebSettings;
    function triggerPageAction (action : Qt_QWebPage_WebAction, checked : boolean) : void;

    // Slots
    function back () : void;
    function forward () : void;
    function reload () : void;
    function stop () : void;

    // Signals
    var iconChanged : QtJSXSignal;
    var linkClicked : QtJSXQUrlSignal;
    var loadFinished : QtJSXboolSignal;
    var loadProgress : QtJSXintSignal;
    var loadStarted : QtJSXSignal;
    var statusBarMessage : QtJSXQStringSignal;
    var titleChanged : QtJSXQStringSignal;
    var urlChanged : QtJSXQUrlSignal;

    // Instance Properties
    var title : string;
    var icon : QIcon;
    var zoomFactor : number;
    var url : QUrl;
    var modified : boolean;
    var resizesToContents : boolean;
    var tiledBackingStoreFrozen : boolean;
    var renderHints : Qt_QPainter_RenderHints;
}
