/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QImageWriter class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qimage.jsx";
import "qt/qimageiohandler.jsx";
import "qt/qiodevice.jsx";

final native class Qt_QImageWriter_ImageWriterError {}

native class QImageWriter
{
    function constructor ();
    function constructor (device : QIODevice, format : QByteArray);
    function constructor (fileName : string, format : QByteArray);

    // Static Members
    static function supportedImageFormats () : QByteArray[];
    static function supportedMimeTypes () : QByteArray[];

    static const UnknownError : Qt_QImageWriter_ImageWriterError;
    static const DeviceError : Qt_QImageWriter_ImageWriterError;
    static const UnsupportedFormatError : Qt_QImageWriter_ImageWriterError;
    static function ImageWriterError(value : Qt_QImageWriter_ImageWriterError) : Qt_QImageWriter_ImageWriterError;

    // Methods
    function canWrite () : boolean;
    function compression () : int;
    function device () : QIODevice;
    function error () : Qt_QImageWriter_ImageWriterError;
    function errorString () : string;
    function fileName () : string;
    function format () : QByteArray;
    function gamma () : number;
    function quality () : int;
    function setCompression (compression : int) : void;
    function setDevice (device : QIODevice) : void;
    function setFileName (fileName : string) : void;
    function setFormat (format : QByteArray) : void;
    function setGamma (gamma : number) : void;
    function setQuality (quality : int) : void;
    function setText (key : string, text : string) : void;
    function supportsOption (option : Qt_QImageIOHandler_ImageOption) : boolean;
    function write (image : QImage) : boolean;
}
