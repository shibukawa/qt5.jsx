/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QCompleter class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qabstractitemmodel.jsx";
import "qt/qabstractitemview.jsx";
import "qt/qmodelindex.jsx";
import "qt/qobject.jsx";
import "qt/qrect.jsx";
import "qt/qt.jsx";
import "qt/qwidget.jsx";
import "qt/_signals.jsx";

final native class Qt_QCompleter_CompletionMode {}

final native class Qt_QCompleter_ModelSorting {}

native class QCompleter extends QObject
{
    function constructor (model : QAbstractItemModel, parent : QObject);
    function constructor (parent : QObject);
    function constructor (completions : string[], parent : QObject);

    static const PopupCompletion : Qt_QCompleter_CompletionMode;
    static const UnfilteredPopupCompletion : Qt_QCompleter_CompletionMode;
    static const InlineCompletion : Qt_QCompleter_CompletionMode;
    static function CompletionMode(value : Qt_QCompleter_CompletionMode) : Qt_QCompleter_CompletionMode;

    static const UnsortedModel : Qt_QCompleter_ModelSorting;
    static const CaseSensitivelySortedModel : Qt_QCompleter_ModelSorting;
    static const CaseInsensitivelySortedModel : Qt_QCompleter_ModelSorting;
    static function ModelSorting(value : Qt_QCompleter_ModelSorting) : Qt_QCompleter_ModelSorting;

    // Methods
    function completionCount () : int;
    function completionModel () : QAbstractItemModel;
    function currentCompletion () : string;
    function currentIndex () : QModelIndex;
    function currentRow () : int;
    function model () : QAbstractItemModel;
    function pathFromIndex (index : QModelIndex) : string;
    function popup () : QAbstractItemView;
    function setCurrentRow (row : int) : boolean;
    function setModel (c : QAbstractItemModel) : void;
    function setPopup (popup : QAbstractItemView) : void;
    function setWidget (widget : QWidget) : void;
    function splitPath (path : string) : string[];
    function widget () : QWidget;

    // Slots
    function complete (rect : QRect) : void;

    // Signals
    var activated : QtJSXQStringSignal;
    var highlighted : QtJSXQStringSignal;

    // Instance Properties
    var completionPrefix : string;
    var modelSorting : Qt_QCompleter_ModelSorting;
    var filterMode : Qt_MatchFlags;
    var completionMode : Qt_QCompleter_CompletionMode;
    var completionColumn : int;
    var completionRole : int;
    var maxVisibleItems : int;
    var caseSensitivity : Qt_CaseSensitivity;
    var wrapAround : boolean;
} = '''QCompleter;
QCompleter.prototype.activated = QCompleter.prototype['activated(QString)'];
QCompleter.prototype.highlighted = QCompleter.prototype['highlighted(QString)'];
''';
