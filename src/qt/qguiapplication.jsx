/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QGuiApplication class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qclipboard.jsx";
import "qt/qcoreapplication.jsx";
import "qt/qcursor.jsx";
import "qt/qfont.jsx";
import "qt/qobject.jsx";
import "qt/qpalette.jsx";
import "qt/qsessionmanager.jsx";
import "qt/qt.jsx";
import "qt/_signals.jsx";

native class QGuiApplication extends QCoreApplication
{
    function constructor (argc : int, argv : string, arg__3 : int);

    // Static Members
    static function changeOverrideCursor (arg__1 : QCursor) : void;
    static function clipboard () : QClipboard;
    static function desktopSettingsAware () : boolean;
    static function focusObject () : QObject;
    static function font () : QFont;
    static function isLeftToRight () : boolean;
    static function isRightToLeft () : boolean;
    static function keyboardModifiers () : Qt_KeyboardModifiers;
    static function mouseButtons () : Qt_MouseButtons;
    static function overrideCursor () : QCursor;
    static function palette () : QPalette;
    static function queryKeyboardModifiers () : Qt_KeyboardModifiers;
    static function restoreOverrideCursor () : void;
    static function setDesktopSettingsAware (on : boolean) : void;
    static function setFont (arg__1 : QFont) : void;
    static function setOverrideCursor (arg__1 : QCursor) : void;
    static function setPalette (pal : QPalette) : void;
    static function sync () : void;

    // Methods
    function devicePixelRatio () : number;
    function isSavingSession () : boolean;
    function isSessionRestored () : boolean;
    function sessionId () : string;
    function sessionKey () : string;

    // Signals
    var commitDataRequest : QtJSXQSessionManagerSignal;
    var focusObjectChanged : QtJSXQObjectSignal;
    var fontDatabaseChanged : QtJSXSignal;
    var lastWindowClosed : QtJSXSignal;
    var saveStateRequest : QtJSXQSessionManagerSignal;

    // Instance Properties
    var applicationDisplayName : string;
    var layoutDirection : Qt_LayoutDirection;
    var platformName : string;
    var quitOnLastWindowClosed : boolean;
}
