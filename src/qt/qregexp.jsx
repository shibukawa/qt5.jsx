/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QRegExp class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qt.jsx";

final native class Qt_QRegExp_PatternSyntax {}

final native class Qt_QRegExp_CaretMode {}

native class QRegExp
{
    function constructor ();
    function constructor (rx : RegExp);
    function constructor (pattern : string, cs : Qt_CaseSensitivity, syntax : Qt_QRegExp_PatternSyntax);

    // Static Members
    static function escape (str : string) : string;

    static const RegExp : Qt_QRegExp_PatternSyntax;
    static const Wildcard : Qt_QRegExp_PatternSyntax;
    static const FixedString : Qt_QRegExp_PatternSyntax;
    static const RegExp2 : Qt_QRegExp_PatternSyntax;
    static const WildcardUnix : Qt_QRegExp_PatternSyntax;
    static const W3CXmlSchema11 : Qt_QRegExp_PatternSyntax;
    static function PatternSyntax(value : Qt_QRegExp_PatternSyntax) : Qt_QRegExp_PatternSyntax;

    static const CaretAtZero : Qt_QRegExp_CaretMode;
    static const CaretAtOffset : Qt_QRegExp_CaretMode;
    static const CaretWontMatch : Qt_QRegExp_CaretMode;
    static function CaretMode(value : Qt_QRegExp_CaretMode) : Qt_QRegExp_CaretMode;

    // Methods
    function cap (nth : int) : string;
    function captureCount () : int;
    function capturedTexts () : string[];
    function caseSensitivity () : Qt_CaseSensitivity;
    function errorString () : string;
    function exactMatch (str : string) : boolean;
    function indexIn (str : string, offset : int, caretMode : Qt_QRegExp_CaretMode) : int;
    function isEmpty () : boolean;
    function isMinimal () : boolean;
    function isValid () : boolean;
    function lastIndexIn (str : string, offset : int, caretMode : Qt_QRegExp_CaretMode) : int;
    function matchedLength () : int;
    function operator_equal (rx : RegExp) : boolean;
    function pattern () : string;
    function patternSyntax () : Qt_QRegExp_PatternSyntax;
    function pos (nth : int) : int;
    function setCaseSensitivity (cs : Qt_CaseSensitivity) : void;
    function setMinimal (minimal : boolean) : void;
    function setPattern (pattern : string) : void;
    function setPatternSyntax (syntax : Qt_QRegExp_PatternSyntax) : void;
    function swap (other : RegExp) : void;
}
