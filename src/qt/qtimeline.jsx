/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QTimeLine class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qeasingcurve.jsx";
import "qt/qobject.jsx";

final native class Qt_QTimeLine_Direction {}

final native class Qt_QTimeLine_State {}

final native class Qt_QTimeLine_CurveShape {}

native class QTimeLine extends QObject
{
    function constructor (duration : int, parent : QObject);

    static const Forward : Qt_QTimeLine_Direction;
    static const Backward : Qt_QTimeLine_Direction;
    static function Direction(value : Qt_QTimeLine_Direction) : Qt_QTimeLine_Direction;

    static const NotRunning : Qt_QTimeLine_State;
    static const Paused : Qt_QTimeLine_State;
    static const Running : Qt_QTimeLine_State;
    static function State(value : Qt_QTimeLine_State) : Qt_QTimeLine_State;

    static const EaseInCurve : Qt_QTimeLine_CurveShape;
    static const EaseOutCurve : Qt_QTimeLine_CurveShape;
    static const EaseInOutCurve : Qt_QTimeLine_CurveShape;
    static const LinearCurve : Qt_QTimeLine_CurveShape;
    static const SineCurve : Qt_QTimeLine_CurveShape;
    static const CosineCurve : Qt_QTimeLine_CurveShape;
    static function CurveShape(value : Qt_QTimeLine_CurveShape) : Qt_QTimeLine_CurveShape;

    // Methods
    function currentFrame () : int;
    function currentValue () : number;
    function endFrame () : int;
    function frameForTime (msec : int) : int;
    function setEndFrame (frame : int) : void;
    function setFrameRange (startFrame : int, endFrame : int) : void;
    function setStartFrame (frame : int) : void;
    function startFrame () : int;
    function state () : Qt_QTimeLine_State;
    function valueForTime (msec : int) : number;

    // Slots
    function resume () : void;
    function setPaused (paused : boolean) : void;
    function start () : void;
    function stop () : void;
    function toggleDirection () : void;

    // Instance Properties
    var duration : int;
    var updateInterval : int;
    var currentTime : int;
    var direction : Qt_QTimeLine_Direction;
    var loopCount : int;
    var curveShape : Qt_QTimeLine_CurveShape;
    var easingCurve : QEasingCurve;
}
