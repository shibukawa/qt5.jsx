/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QTabBar class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qcolor.jsx";
import "qt/qicon.jsx";
import "qt/qpoint.jsx";
import "qt/qrect.jsx";
import "qt/qsize.jsx";
import "qt/qstyleoptiontab.jsx";
import "qt/qt.jsx";
import "qt/qwidget.jsx";
import "qt/_signals.jsx";

final native class Qt_QTabBar_Shape {}

final native class Qt_QTabBar_ButtonPosition {}

final native class Qt_QTabBar_SelectionBehavior {}

native class QTabBar extends QWidget
{
    function constructor (parent : QWidget);

    static const RoundedNorth : Qt_QTabBar_Shape;
    static const RoundedSouth : Qt_QTabBar_Shape;
    static const RoundedWest : Qt_QTabBar_Shape;
    static const RoundedEast : Qt_QTabBar_Shape;
    static const TriangularNorth : Qt_QTabBar_Shape;
    static const TriangularSouth : Qt_QTabBar_Shape;
    static const TriangularWest : Qt_QTabBar_Shape;
    static const TriangularEast : Qt_QTabBar_Shape;
    static function Shape(value : Qt_QTabBar_Shape) : Qt_QTabBar_Shape;

    static const LeftSide : Qt_QTabBar_ButtonPosition;
    static const RightSide : Qt_QTabBar_ButtonPosition;
    static function ButtonPosition(value : Qt_QTabBar_ButtonPosition) : Qt_QTabBar_ButtonPosition;

    static const SelectLeftTab : Qt_QTabBar_SelectionBehavior;
    static const SelectRightTab : Qt_QTabBar_SelectionBehavior;
    static const SelectPreviousTab : Qt_QTabBar_SelectionBehavior;
    static function SelectionBehavior(value : Qt_QTabBar_SelectionBehavior) : Qt_QTabBar_SelectionBehavior;

    // Methods
    function addTab (icon : QIcon, text : string) : int;
    function addTab (text : string) : int;
    function initStyleOption (option : QStyleOptionTab, tabIndex : int) : void;
    function insertTab (index : int, icon : QIcon, text : string) : int;
    function insertTab (index : int, text : string) : int;
    function isTabEnabled (index : int) : boolean;
    function minimumTabSizeHint (index : int) : QSize;
    function moveTab (from : int, to : int) : void;
    function removeTab (index : int) : void;
    function setTabButton (index : int, position : Qt_QTabBar_ButtonPosition, widget : QWidget) : void;
    function setTabData (index : int, data : variant) : void;
    function setTabEnabled (index : int, arg__2 : boolean) : void;
    function setTabIcon (index : int, icon : QIcon) : void;
    function setTabText (index : int, text : string) : void;
    function setTabTextColor (index : int, color : QColor) : void;
    function setTabToolTip (index : int, tip : string) : void;
    function setTabWhatsThis (index : int, text : string) : void;
    function tabAt (pos : QPoint) : int;
    function tabButton (index : int, position : Qt_QTabBar_ButtonPosition) : QWidget;
    function tabData (index : int) : variant;
    function tabIcon (index : int) : QIcon;
    function tabInserted (index : int) : void;
    function tabLayoutChange () : void;
    function tabRect (index : int) : QRect;
    function tabRemoved (index : int) : void;
    function tabSizeHint (index : int) : QSize;
    function tabText (index : int) : string;
    function tabTextColor (index : int) : QColor;
    function tabToolTip (index : int) : string;
    function tabWhatsThis (index : int) : string;

    // Signals
    var currentChanged : QtJSXintSignal;
    var tabBarClicked : QtJSXintSignal;
    var tabBarDoubleClicked : QtJSXintSignal;
    var tabCloseRequested : QtJSXintSignal;
    var tabMoved : QtJSXintintSignal;

    // Instance Properties
    var shape : Qt_QTabBar_Shape;
    var currentIndex : int;
    var count : int;
    var drawBase : boolean;
    var iconSize : QSize;
    var elideMode : Qt_TextElideMode;
    var usesScrollButtons : boolean;
    var tabsClosable : boolean;
    var selectionBehaviorOnRemove : Qt_QTabBar_SelectionBehavior;
    var expanding : boolean;
    var movable : boolean;
    var documentMode : boolean;
}
