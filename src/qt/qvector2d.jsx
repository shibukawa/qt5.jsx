/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QVector2D class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qpoint.jsx";
import "qt/qpointf.jsx";
import "qt/qvector3d.jsx";
import "qt/qvector4d.jsx";

native class QVector2D
{
    function constructor ();
    function constructor (point : QPoint);
    function constructor (point : QPointF);
    function constructor (vector : QVector3D);
    function constructor (vector : QVector4D);
    function constructor (xpos : number, ypos : number);

    // Static Members
    static function dotProduct (v1 : QVector2D, v2 : QVector2D) : number;

    // Methods
    function distanceToLine (point : QVector2D, direction : QVector2D) : number;
    function distanceToPoint (point : QVector2D) : number;
    function isNull () : boolean;
    function length () : number;
    function lengthSquared () : number;
    function normalize () : void;
    function normalized () : QVector2D;
    function operator_add_assign (vector : QVector2D) : QVector2D;
    function operator_divide_assign (divisor : number) : QVector2D;
    function operator_equal (v2 : QVector2D) : boolean;
    function operator_multiply_assign (vector : QVector2D) : QVector2D;
    function operator_multiply_assign (factor : number) : QVector2D;
    function operator_subscript (i : int) : number;
    function operator_subtract_assign (vector : QVector2D) : QVector2D;
    function setX (x : number) : void;
    function setY (y : number) : void;
    function toPoint () : QPoint;
    function toPointF () : QPointF;
    function toVector3D () : QVector3D;
    function toVector4D () : QVector4D;
    function x () : number;
    function y () : number;
}
