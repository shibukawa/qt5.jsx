/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QDialogButtonBox class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qabstractbutton.jsx";
import "qt/qpushbutton.jsx";
import "qt/qt.jsx";
import "qt/qwidget.jsx";
import "qt/_signals.jsx";

final native class Qt_QDialogButtonBox_StandardButton {}

final native class Qt_QDialogButtonBox_StandardButtons {}

final native class Qt_QDialogButtonBox_ButtonLayout {}

final native class Qt_QDialogButtonBox_ButtonRole {}

native class QDialogButtonBox extends QWidget
{
    function constructor (buttons : Qt_QDialogButtonBox_StandardButtons, parent : QWidget);
    function constructor (buttons : Qt_QDialogButtonBox_StandardButtons, orientation : Qt_Orientation, parent : QWidget);
    function constructor (parent : QWidget);
    function constructor (orientation : Qt_Orientation, parent : QWidget);

    static const NoButton : Qt_QDialogButtonBox_StandardButton;
    static const Ok : Qt_QDialogButtonBox_StandardButton;
    static const Save : Qt_QDialogButtonBox_StandardButton;
    static const SaveAll : Qt_QDialogButtonBox_StandardButton;
    static const Open : Qt_QDialogButtonBox_StandardButton;
    static const Yes : Qt_QDialogButtonBox_StandardButton;
    static const YesToAll : Qt_QDialogButtonBox_StandardButton;
    static const No : Qt_QDialogButtonBox_StandardButton;
    static const NoToAll : Qt_QDialogButtonBox_StandardButton;
    static const Abort : Qt_QDialogButtonBox_StandardButton;
    static const Retry : Qt_QDialogButtonBox_StandardButton;
    static const Ignore : Qt_QDialogButtonBox_StandardButton;
    static const Close : Qt_QDialogButtonBox_StandardButton;
    static const Cancel : Qt_QDialogButtonBox_StandardButton;
    static const Discard : Qt_QDialogButtonBox_StandardButton;
    static const Help : Qt_QDialogButtonBox_StandardButton;
    static const Apply : Qt_QDialogButtonBox_StandardButton;
    static const Reset : Qt_QDialogButtonBox_StandardButton;
    static const RestoreDefaults : Qt_QDialogButtonBox_StandardButton;
    static function StandardButton(value : Qt_QDialogButtonBox_StandardButton) : Qt_QDialogButtonBox_StandardButton;
    static function StandardButtons(...value : Qt_QDialogButtonBox_StandardButton) : Qt_QDialogButtonBox_StandardButtons;

    static const WinLayout : Qt_QDialogButtonBox_ButtonLayout;
    static const MacLayout : Qt_QDialogButtonBox_ButtonLayout;
    static const KdeLayout : Qt_QDialogButtonBox_ButtonLayout;
    static const GnomeLayout : Qt_QDialogButtonBox_ButtonLayout;
    static function ButtonLayout(value : Qt_QDialogButtonBox_ButtonLayout) : Qt_QDialogButtonBox_ButtonLayout;

    static const InvalidRole : Qt_QDialogButtonBox_ButtonRole;
    static const AcceptRole : Qt_QDialogButtonBox_ButtonRole;
    static const RejectRole : Qt_QDialogButtonBox_ButtonRole;
    static const DestructiveRole : Qt_QDialogButtonBox_ButtonRole;
    static const ActionRole : Qt_QDialogButtonBox_ButtonRole;
    static const HelpRole : Qt_QDialogButtonBox_ButtonRole;
    static const YesRole : Qt_QDialogButtonBox_ButtonRole;
    static const NoRole : Qt_QDialogButtonBox_ButtonRole;
    static const ResetRole : Qt_QDialogButtonBox_ButtonRole;
    static const ApplyRole : Qt_QDialogButtonBox_ButtonRole;
    static const NRoles : Qt_QDialogButtonBox_ButtonRole;
    static function ButtonRole(value : Qt_QDialogButtonBox_ButtonRole) : Qt_QDialogButtonBox_ButtonRole;

    // Methods
    function addButton (button : QAbstractButton, role : Qt_QDialogButtonBox_ButtonRole) : void;
    function addButton (button : Qt_QDialogButtonBox_StandardButton) : QPushButton;
    function addButton (text : string, role : Qt_QDialogButtonBox_ButtonRole) : QPushButton;
    function button (which : Qt_QDialogButtonBox_StandardButton) : QPushButton;
    function buttonRole (button : QAbstractButton) : Qt_QDialogButtonBox_ButtonRole;
    function buttons () : QAbstractButton[];
    function clear () : void;
    function removeButton (button : QAbstractButton) : void;
    function standardButton (button : QAbstractButton) : Qt_QDialogButtonBox_StandardButton;

    // Signals
    var accepted : QtJSXSignal;
    var clicked : QtJSXQAbstractButtonSignal;
    var helpRequested : QtJSXSignal;
    var rejected : QtJSXSignal;

    // Instance Properties
    var orientation : Qt_Orientation;
    var standardButtons : Qt_QDialogButtonBox_StandardButtons;
    var centerButtons : boolean;
}
