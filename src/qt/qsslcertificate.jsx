/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QSslCertificate class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qcryptographichash.jsx";
import "qt/qiodevice.jsx";
import "qt/qregexp.jsx";
import "qt/qssl.jsx";
import "qt/qsslerror.jsx";
import "qt/qsslkey.jsx";

final native class Qt_QSslCertificate_SubjectInfo {}

native class QSslCertificate
{
    function constructor (device : QIODevice, format : Qt_QSsl_EncodingFormat);
    function constructor (data : QByteArray, format : Qt_QSsl_EncodingFormat);
    function constructor (other : QSslCertificate);

    // Static Members
    static function fromData (data : QByteArray, format : Qt_QSsl_EncodingFormat) : QSslCertificate[];
    static function fromDevice (device : QIODevice, format : Qt_QSsl_EncodingFormat) : QSslCertificate[];
    static function fromPath (path : string, format : Qt_QSsl_EncodingFormat, syntax : Qt_QRegExp_PatternSyntax) : QSslCertificate[];
    static function verify (certificateChain : QSslCertificate[], hostName : string) : QSslError[];

    static const Organization : Qt_QSslCertificate_SubjectInfo;
    static const CommonName : Qt_QSslCertificate_SubjectInfo;
    static const LocalityName : Qt_QSslCertificate_SubjectInfo;
    static const OrganizationalUnitName : Qt_QSslCertificate_SubjectInfo;
    static const CountryName : Qt_QSslCertificate_SubjectInfo;
    static const StateOrProvinceName : Qt_QSslCertificate_SubjectInfo;
    static const DistinguishedNameQualifier : Qt_QSslCertificate_SubjectInfo;
    static const SerialNumber : Qt_QSslCertificate_SubjectInfo;
    static const EmailAddress : Qt_QSslCertificate_SubjectInfo;
    static function SubjectInfo(value : Qt_QSslCertificate_SubjectInfo) : Qt_QSslCertificate_SubjectInfo;

    // Methods
    function clear () : void;
    function digest (algorithm : Qt_QCryptographicHash_Algorithm) : QByteArray;
    function effectiveDate () : Date;
    function expiryDate () : Date;
    function isBlacklisted () : boolean;
    function isNull () : boolean;
    function issuerInfo (info : Qt_QSslCertificate_SubjectInfo) : string[];
    function issuerInfo (attribute : QByteArray) : string[];
    function issuerInfoAttributes () : QByteArray[];
    function operator_assign (other : QSslCertificate) : QSslCertificate;
    function operator_equal (other : QSslCertificate) : boolean;
    function publicKey () : QSslKey;
    function serialNumber () : QByteArray;
    function subjectInfo (info : Qt_QSslCertificate_SubjectInfo) : string[];
    function subjectInfo (attribute : QByteArray) : string[];
    function subjectInfoAttributes () : QByteArray[];
    function swap (other : QSslCertificate) : void;
    function toDer () : QByteArray;
    function toPem () : QByteArray;
    function toText () : string;
    function version () : QByteArray;
}
