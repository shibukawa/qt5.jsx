/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QHostAddress class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qabstractsocket.jsx";
import "qt/qipv6address.jsx";

final native class Qt_QHostAddress_SpecialAddress {}

native class QHostAddress
{
    function constructor ();
    function constructor (address : Qt_QHostAddress_SpecialAddress);
    function constructor (copy : QHostAddress);
    function constructor (ip6Addr : QIPv6Address);
    function constructor (address : string);
    function constructor (ip4Addr : int);

    // Static Members

    static const Null : Qt_QHostAddress_SpecialAddress;
    static const Broadcast : Qt_QHostAddress_SpecialAddress;
    static const LocalHost : Qt_QHostAddress_SpecialAddress;
    static const LocalHostIPv6 : Qt_QHostAddress_SpecialAddress;
    static const Any : Qt_QHostAddress_SpecialAddress;
    static const AnyIPv6 : Qt_QHostAddress_SpecialAddress;
    static const AnyIPv4 : Qt_QHostAddress_SpecialAddress;
    static function SpecialAddress(value : Qt_QHostAddress_SpecialAddress) : Qt_QHostAddress_SpecialAddress;

    // Methods
    function clear () : void;
    function isInSubnet (subnet : QHostAddress, netmask : int) : boolean;
    function isLoopback () : boolean;
    function isNull () : boolean;
    function operator_equal (address : Qt_QHostAddress_SpecialAddress) : boolean;
    function operator_equal (address : QHostAddress) : boolean;
    function protocol () : Qt_QAbstractSocket_NetworkLayerProtocol;
    function scopeId () : string;
    function setAddress (ip6Addr : QIPv6Address) : void;
    function setAddress (address : string) : boolean;
    function setAddress (ip4Addr : int) : void;
    function setScopeId (id : string) : void;
    function toIPv4Address () : int;
    function toIPv6Address () : QIPv6Address;
}
