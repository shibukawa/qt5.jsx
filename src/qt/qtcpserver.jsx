/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QTcpServer class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qabstractsocket.jsx";
import "qt/qhostaddress.jsx";
import "qt/qnetworkproxy.jsx";
import "qt/qobject.jsx";
import "qt/qtcpsocket.jsx";
import "qt/_signals.jsx";

native class QTcpServer extends QObject
{
    function constructor (parent : QObject);

    // Methods
    function addPendingConnection (socket : QTcpSocket) : void;
    function close () : void;
    function errorString () : string;
    function hasPendingConnections () : boolean;
    function isListening () : boolean;
    function listen (address : QHostAddress, port : int) : boolean;
    function maxPendingConnections () : int;
    function nextPendingConnection () : QTcpSocket;
    function pauseAccepting () : void;
    function proxy () : QNetworkProxy;
    function resumeAccepting () : void;
    function serverAddress () : QHostAddress;
    function serverError () : Qt_QAbstractSocket_SocketError;
    function serverPort () : int;
    function setMaxPendingConnections (numConnections : int) : void;
    function setProxy (networkProxy : QNetworkProxy) : void;
    function waitForNewConnection (msec : int) : boolean;

    // Signals
    var acceptError : QtJSXQt_QAbstractSocket_SocketErrorSignal;
    var newConnection : QtJSXSignal;
}
