/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QTextDocument class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qbytearray.jsx";
import "qt/qfont.jsx";
import "qt/qobject.jsx";
import "qt/qpainter.jsx";
import "qt/qrectf.jsx";
import "qt/qsizef.jsx";
import "qt/qt.jsx";
import "qt/qtextblock.jsx";
import "qt/qtextcursor.jsx";
import "qt/qtextformat.jsx";
import "qt/qtextframe.jsx";
import "qt/qtextobject.jsx";
import "qt/qurl.jsx";
import "qt/_signals.jsx";

final native class Qt_QTextDocument_MetaInformation {}

final native class Qt_QTextDocument_ResourceType {}

final native class Qt_QTextDocument_Stacks {}

final native class Qt_QTextDocument_FindFlag {}

final native class Qt_QTextDocument_FindFlags {}

native class QTextDocument extends QObject
{
    function constructor (parent : QObject);
    function constructor (text : string, parent : QObject);

    static const DocumentTitle : Qt_QTextDocument_MetaInformation;
    static const DocumentUrl : Qt_QTextDocument_MetaInformation;
    static function MetaInformation(value : Qt_QTextDocument_MetaInformation) : Qt_QTextDocument_MetaInformation;

    static const HtmlResource : Qt_QTextDocument_ResourceType;
    static const ImageResource : Qt_QTextDocument_ResourceType;
    static const StyleSheetResource : Qt_QTextDocument_ResourceType;
    static const UserResource : Qt_QTextDocument_ResourceType;
    static function ResourceType(value : Qt_QTextDocument_ResourceType) : Qt_QTextDocument_ResourceType;

    static const UndoStack : Qt_QTextDocument_Stacks;
    static const RedoStack : Qt_QTextDocument_Stacks;
    static const UndoAndRedoStacks : Qt_QTextDocument_Stacks;
    static function Stacks(value : Qt_QTextDocument_Stacks) : Qt_QTextDocument_Stacks;

    static const FindBackward : Qt_QTextDocument_FindFlag;
    static const FindCaseSensitively : Qt_QTextDocument_FindFlag;
    static const FindWholeWords : Qt_QTextDocument_FindFlag;
    static function FindFlag(value : Qt_QTextDocument_FindFlag) : Qt_QTextDocument_FindFlag;
    static function FindFlags(...value : Qt_QTextDocument_FindFlag) : Qt_QTextDocument_FindFlags;

    // Methods
    function addResource (type : int, name : QUrl, resource : variant) : void;
    function adjustSize () : void;
    function allFormats () : QTextFormat[];
    function availableRedoSteps () : int;
    function availableUndoSteps () : int;
    function begin () : QTextBlock;
    function characterAt (pos : int) : string;
    function characterCount () : int;
    function clear () : void;
    function clearUndoRedoStacks (historyToClear : Qt_QTextDocument_Stacks) : void;
    function clone (parent : QObject) : QTextDocument;
    function createObject (f : QTextFormat) : QTextObject;
    function defaultCursorMoveStyle () : Qt_CursorMoveStyle;
    function drawContents (painter : QPainter, rect : QRectF) : void;
    function end () : QTextBlock;
    function find (expr : RegExp, from : QTextCursor, options : Qt_QTextDocument_FindFlags) : QTextCursor;
    function find (expr : RegExp, from : int, options : Qt_QTextDocument_FindFlags) : QTextCursor;
    function find (subString : string, from : QTextCursor, options : Qt_QTextDocument_FindFlags) : QTextCursor;
    function find (subString : string, from : int, options : Qt_QTextDocument_FindFlags) : QTextCursor;
    function findBlock (pos : int) : QTextBlock;
    function findBlockByLineNumber (blockNumber : int) : QTextBlock;
    function findBlockByNumber (blockNumber : int) : QTextBlock;
    function firstBlock () : QTextBlock;
    function frameAt (pos : int) : QTextFrame;
    function idealWidth () : number;
    function isEmpty () : boolean;
    function isRedoAvailable () : boolean;
    function isUndoAvailable () : boolean;
    function lastBlock () : QTextBlock;
    function lineCount () : int;
    function loadResource (type : int, name : QUrl) : variant;
    function markContentsDirty (from : int, length : int) : void;
    function metaInformation (info : Qt_QTextDocument_MetaInformation) : string;
    function object (objectIndex : int) : QTextObject;
    function objectForFormat (arg__1 : QTextFormat) : QTextObject;
    function pageCount () : int;
    function redo (cursor : QTextCursor) : void;
    function resource (type : int, name : QUrl) : variant;
    function revision () : int;
    function rootFrame () : QTextFrame;
    function setDefaultCursorMoveStyle (style : Qt_CursorMoveStyle) : void;
    function setHtml (html : string) : void;
    function setMetaInformation (info : Qt_QTextDocument_MetaInformation, arg__2 : string) : void;
    function setPlainText (text : string) : void;
    function toHtml (encoding : QByteArray) : string;
    function toPlainText () : string;
    function undo (cursor : QTextCursor) : void;

    // Slots
    function redo () : void;
    function undo () : void;

    // Signals
    var blockCountChanged : QtJSXintSignal;
    var contentsChange : QtJSXintintintSignal;
    var contentsChanged : QtJSXSignal;
    var cursorPositionChanged : QtJSXQTextCursorSignal;
    var documentLayoutChanged : QtJSXSignal;
    var modificationChanged : QtJSXboolSignal;
    var redoAvailable : QtJSXboolSignal;
    var undoAvailable : QtJSXboolSignal;
    var undoCommandAdded : QtJSXSignal;

    // Instance Properties
    var undoRedoEnabled : boolean;
    var modified : boolean;
    var pageSize : QSizeF;
    var defaultFont : QFont;
    var useDesignMetrics : boolean;
    var size : QSizeF;
    var textWidth : number;
    var blockCount : int;
    var indentWidth : number;
    var defaultStyleSheet : string;
    var maximumBlockCount : int;
    var documentMargin : number;
}
