/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QPolygon class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qpoint.jsx";
import "qt/qrect.jsx";
import "qt/qt.jsx";

native class QPolygon
{
    function constructor ();
    function constructor (a : QPolygon);
    function constructor (r : QRect, closed : boolean);
    function constructor (v : QPoint[]);
    function constructor (size : int);

    // Static Members
    static function fromList (list : QPoint[]) : QPoint[];

    // Methods
    function append (t : QPoint) : void;
    function at (i : int) : QPoint;
    function boundingRect () : QRect;
    function capacity () : int;
    function clear () : void;
    function contains (t : QPoint) : boolean;
    function containsPoint (pt : QPoint, fillRule : Qt_FillRule) : boolean;
    function count () : int;
    function count (t : QPoint) : int;
    function empty () : boolean;
    function endsWith (t : QPoint) : boolean;
    function fill (t : QPoint, size : int) : QPoint[];
    function first () : QPoint;
    function indexOf (t : QPoint, from : int) : int;
    function intersected (r : QPolygon) : QPolygon;
    function isEmpty () : boolean;
    function isSharedWith (other : QPoint[]) : boolean;
    function last () : QPoint;
    function lastIndexOf (t : QPoint, from : int) : int;
    function length () : int;
    function mid (pos : int, len : int) : QPoint[];
    function operator_equal (v : QPoint[]) : boolean;
    function pop_back () : void;
    function pop_front () : void;
    function prepend (t : QPoint) : void;
    function push_back (t : QPoint) : void;
    function push_front (t : QPoint) : void;
    function remove (i : int) : void;
    function remove (i : int, n : int) : void;
    function removeAt (i : int) : void;
    function removeFirst () : void;
    function removeLast () : void;
    function replace (i : int, t : QPoint) : void;
    function reserve (size : int) : void;
    function resize (size : int) : void;
    function setSharable (sharable : boolean) : void;
    function size () : int;
    function squeeze () : void;
    function startsWith (t : QPoint) : boolean;
    function subtracted (r : QPolygon) : QPolygon;
    function swap (other : QPolygon) : void;
    function takeAt (i : int) : QPoint;
    function takeFirst () : QPoint;
    function takeLast () : QPoint;
    function toList () : QPoint[];
    function translate (offset : QPoint) : void;
    function translate (dx : int, dy : int) : void;
    function translated (offset : QPoint) : QPolygon;
    function translated (dx : int, dy : int) : QPolygon;
    function united (r : QPolygon) : QPolygon;
    function value (i : int) : QPoint;
    function value (i : int, defaultValue : QPoint) : QPoint;
}
