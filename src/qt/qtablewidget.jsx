/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QTableWidget class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qabstractitemview.jsx";
import "qt/qitemselectionmodel.jsx";
import "qt/qmimedata.jsx";
import "qt/qmodelindex.jsx";
import "qt/qpoint.jsx";
import "qt/qrect.jsx";
import "qt/qt.jsx";
import "qt/qtableview.jsx";
import "qt/qtablewidgetitem.jsx";
import "qt/qtablewidgetselectionrange.jsx";
import "qt/qwidget.jsx";
import "qt/_signals.jsx";

native class QTableWidget extends QTableView
{
    function constructor (parent : QWidget);
    function constructor (rows : int, columns : int, parent : QWidget);

    // Methods
    function cellWidget (row : int, column : int) : QWidget;
    function closePersistentEditor (item : QTableWidgetItem) : void;
    function column (item : QTableWidgetItem) : int;
    function currentColumn () : int;
    function currentItem () : QTableWidgetItem;
    function currentRow () : int;
    function dropMimeData (row : int, column : int, data : QMimeData, action : Qt_DropAction) : boolean;
    function editItem (item : QTableWidgetItem) : void;
    function findItems (text : string, flags : Qt_MatchFlags) : QTableWidgetItem[];
    function horizontalHeaderItem (column : int) : QTableWidgetItem;
    function indexFromItem (item : QTableWidgetItem) : QModelIndex;
    function item (row : int, column : int) : QTableWidgetItem;
    function itemAt (p : QPoint) : QTableWidgetItem;
    function itemAt (x : int, y : int) : QTableWidgetItem;
    function itemFromIndex (index : QModelIndex) : QTableWidgetItem;
    function itemPrototype () : QTableWidgetItem;
    function items (data : QMimeData) : QTableWidgetItem[];
    function mimeTypes () : string[];
    function openPersistentEditor (item : QTableWidgetItem) : void;
    function removeCellWidget (row : int, column : int) : void;
    function row (item : QTableWidgetItem) : int;
    function selectedItems () : QTableWidgetItem[];
    function selectedRanges () : QTableWidgetSelectionRange[];
    function setCellWidget (row : int, column : int, widget : QWidget) : void;
    function setCurrentCell (row : int, column : int) : void;
    function setCurrentCell (row : int, column : int, command : Qt_QItemSelectionModel_SelectionFlags) : void;
    function setCurrentItem (item : QTableWidgetItem) : void;
    function setCurrentItem (item : QTableWidgetItem, command : Qt_QItemSelectionModel_SelectionFlags) : void;
    function setHorizontalHeaderItem (column : int, item : QTableWidgetItem) : void;
    function setHorizontalHeaderLabels (labels : string[]) : void;
    function setItem (row : int, column : int, item : QTableWidgetItem) : void;
    function setItemPrototype (item : QTableWidgetItem) : void;
    function setRangeSelected (range : QTableWidgetSelectionRange, select : boolean) : void;
    function setVerticalHeaderItem (row : int, item : QTableWidgetItem) : void;
    function setVerticalHeaderLabels (labels : string[]) : void;
    function sortItems (column : int, order : Qt_SortOrder) : void;
    function supportedDropActions () : Qt_DropActions;
    function takeHorizontalHeaderItem (column : int) : QTableWidgetItem;
    function takeItem (row : int, column : int) : QTableWidgetItem;
    function takeVerticalHeaderItem (row : int) : QTableWidgetItem;
    function verticalHeaderItem (row : int) : QTableWidgetItem;
    function visualColumn (logicalColumn : int) : int;
    function visualItemRect (item : QTableWidgetItem) : QRect;
    function visualRow (logicalRow : int) : int;

    // Slots
    function clear () : void;
    function clearContents () : void;
    function insertColumn (column : int) : void;
    function insertRow (row : int) : void;
    function removeColumn (column : int) : void;
    function removeRow (row : int) : void;
    function scrollToItem (item : QTableWidgetItem, hint : Qt_QAbstractItemView_ScrollHint) : void;

    // Signals
    var cellActivated : QtJSXintintSignal;
    var cellChanged : QtJSXintintSignal;
    var cellClicked : QtJSXintintSignal;
    var cellDoubleClicked : QtJSXintintSignal;
    var cellEntered : QtJSXintintSignal;
    var cellPressed : QtJSXintintSignal;
    var currentCellChanged : QtJSXintintintintSignal;
    var currentItemChanged : QtJSXQTableWidgetItemQTableWidgetItemSignal;
    var itemActivated : QtJSXQTableWidgetItemSignal;
    var itemChanged : QtJSXQTableWidgetItemSignal;
    var itemClicked : QtJSXQTableWidgetItemSignal;
    var itemDoubleClicked : QtJSXQTableWidgetItemSignal;
    var itemEntered : QtJSXQTableWidgetItemSignal;
    var itemPressed : QtJSXQTableWidgetItemSignal;
    var itemSelectionChanged : QtJSXSignal;

    // Instance Properties
    var rowCount : int;
    var columnCount : int;
}
