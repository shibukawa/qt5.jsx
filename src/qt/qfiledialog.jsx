/*
 * JSX wrapper code generated by JSXgenerator.
 *
 * QFileDialog class
 *
 * Note: DO NOT EDIT THIS FILE
 */
import "qt/qabstractitemdelegate.jsx";
import "qt/qbytearray.jsx";
import "qt/qdialog.jsx";
import "qt/qdir.jsx";
import "qt/qfileiconprovider.jsx";
import "qt/qobject.jsx";
import "qt/qt.jsx";
import "qt/qurl.jsx";
import "qt/qwidget.jsx";
import "qt/_signals.jsx";

final native class Qt_QFileDialog_FileMode {}

final native class Qt_QFileDialog_Option {}

final native class Qt_QFileDialog_Options {}

final native class Qt_QFileDialog_DialogLabel {}

final native class Qt_QFileDialog_ViewMode {}

final native class Qt_QFileDialog_AcceptMode {}

native class QFileDialog extends QDialog
{
    function constructor (parent : QWidget, f : Qt_WindowFlags);
    function constructor (parent : QWidget, caption : string, directory : string, filter : string);

    // Static Members
    static function getExistingDirectory (parent : QWidget, caption : string, dir : string, options : Qt_QFileDialog_Options) : string;
    static function getExistingDirectoryUrl (parent : QWidget, caption : string, dir : QUrl, options : Qt_QFileDialog_Options, supportedSchemes : string[]) : QUrl;
    static function getOpenFileName (parent : QWidget, caption : string, dir : string, filter : string, selectedFilter : string, options : Qt_QFileDialog_Options) : string;
    static function getOpenFileNames (parent : QWidget, caption : string, dir : string, filter : string, selectedFilter : string, options : Qt_QFileDialog_Options) : string[];
    static function getOpenFileUrl (parent : QWidget, caption : string, dir : QUrl, filter : string, selectedFilter : string, options : Qt_QFileDialog_Options, supportedSchemes : string[]) : QUrl;
    static function getOpenFileUrls (parent : QWidget, caption : string, dir : QUrl, filter : string, selectedFilter : string, options : Qt_QFileDialog_Options, supportedSchemes : string[]) : QUrl[];
    static function getSaveFileName (parent : QWidget, caption : string, dir : string, filter : string, selectedFilter : string, options : Qt_QFileDialog_Options) : string;
    static function getSaveFileUrl (parent : QWidget, caption : string, dir : QUrl, filter : string, selectedFilter : string, options : Qt_QFileDialog_Options, supportedSchemes : string[]) : QUrl;

    static const AnyFile : Qt_QFileDialog_FileMode;
    static const ExistingFile : Qt_QFileDialog_FileMode;
    static const Directory : Qt_QFileDialog_FileMode;
    static const ExistingFiles : Qt_QFileDialog_FileMode;
    static const DirectoryOnly : Qt_QFileDialog_FileMode;
    static function FileMode(value : Qt_QFileDialog_FileMode) : Qt_QFileDialog_FileMode;

    static const ShowDirsOnly : Qt_QFileDialog_Option;
    static const DontResolveSymlinks : Qt_QFileDialog_Option;
    static const DontConfirmOverwrite : Qt_QFileDialog_Option;
    static const DontUseSheet : Qt_QFileDialog_Option;
    static const DontUseNativeDialog : Qt_QFileDialog_Option;
    static const ReadOnly : Qt_QFileDialog_Option;
    static const HideNameFilterDetails : Qt_QFileDialog_Option;
    static const DontUseCustomDirectoryIcons : Qt_QFileDialog_Option;
    static function Option(value : Qt_QFileDialog_Option) : Qt_QFileDialog_Option;
    static function Options(...value : Qt_QFileDialog_Option) : Qt_QFileDialog_Options;

    static const LookIn : Qt_QFileDialog_DialogLabel;
    static const FileName : Qt_QFileDialog_DialogLabel;
    static const FileType : Qt_QFileDialog_DialogLabel;
    static const Accept : Qt_QFileDialog_DialogLabel;
    static const Reject : Qt_QFileDialog_DialogLabel;
    static function DialogLabel(value : Qt_QFileDialog_DialogLabel) : Qt_QFileDialog_DialogLabel;

    static const Detail : Qt_QFileDialog_ViewMode;
    static const List : Qt_QFileDialog_ViewMode;
    static function ViewMode(value : Qt_QFileDialog_ViewMode) : Qt_QFileDialog_ViewMode;

    static const AcceptOpen : Qt_QFileDialog_AcceptMode;
    static const AcceptSave : Qt_QFileDialog_AcceptMode;
    static function AcceptMode(value : Qt_QFileDialog_AcceptMode) : Qt_QFileDialog_AcceptMode;

    // Methods
    function directory () : QDir;
    function directoryUrl () : QUrl;
    function filter () : Qt_QDir_Filters;
    function history () : string[];
    function iconProvider () : QFileIconProvider;
    function isNameFilterDetailsVisible () : boolean;
    function itemDelegate () : QAbstractItemDelegate;
    function labelText (label : Qt_QFileDialog_DialogLabel) : string;
    function mimeTypeFilters () : string[];
    function nameFilters () : string[];
    function open (receiver : QObject, member : string) : void;
    function restoreState (state : QByteArray) : boolean;
    function saveState () : QByteArray;
    function selectFile (filename : string) : void;
    function selectMimeTypeFilter (filter : string) : void;
    function selectNameFilter (filter : string) : void;
    function selectUrl (url : QUrl) : void;
    function selectedFiles () : string[];
    function selectedNameFilter () : string;
    function selectedUrls () : QUrl[];
    function setDirectory (directory : QDir) : void;
    function setDirectory (directory : string) : void;
    function setDirectoryUrl (directory : QUrl) : void;
    function setFilter (filters : Qt_QDir_Filters) : void;
    function setHistory (paths : string[]) : void;
    function setIconProvider (provider : QFileIconProvider) : void;
    function setItemDelegate (delegate : QAbstractItemDelegate) : void;
    function setLabelText (label : Qt_QFileDialog_DialogLabel, text : string) : void;
    function setMimeTypeFilters (filters : string[]) : void;
    function setNameFilter (filter : string) : void;
    function setNameFilterDetailsVisible (enabled : boolean) : void;
    function setNameFilters (filters : string[]) : void;
    function setOption (option : Qt_QFileDialog_Option, on : boolean) : void;
    function setSidebarUrls (urls : QUrl[]) : void;
    function sidebarUrls () : QUrl[];
    function testOption (option : Qt_QFileDialog_Option) : boolean;

    // Signals
    var currentChanged : QtJSXQStringSignal;
    var currentUrlChanged : QtJSXQUrlSignal;
    var directoryEntered : QtJSXQStringSignal;
    var directoryUrlEntered : QtJSXQUrlSignal;
    var fileSelected : QtJSXQStringSignal;
    var filesSelected : QtJSXQStringListSignal;
    var filterSelected : QtJSXQStringSignal;
    var urlSelected : QtJSXQUrlSignal;
    var urlsSelected : QtJSXQUrlListSignal;

    // Instance Properties
    var viewMode : Qt_QFileDialog_ViewMode;
    var fileMode : Qt_QFileDialog_FileMode;
    var acceptMode : Qt_QFileDialog_AcceptMode;
    var readOnly : boolean;
    var resolveSymlinks : boolean;
    var confirmOverwrite : boolean;
    var defaultSuffix : string;
    var nameFilterDetailsVisible : boolean;
    var options : Qt_QFileDialog_Options;
}
